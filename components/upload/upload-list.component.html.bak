<div *ngFor="let file of list" class="vts-upload-list-{{ listType }}-container">
  <div
    class="vts-upload-list-item vts-upload-list-item-{{
      file.status
    }} vts-upload-list-item-list-type-{{ listType }}"
    [attr.data-key]="file.key"
    @itemState
    vts-tooltip
    [vtsTooltipTitle]="file.status === 'error' ? file.message : null"
  >
    <ng-template #icon>
      <ng-container [ngSwitch]="file.iconType">
        <div
          *ngSwitchCase="'uploading'"
          class="vts-upload-list-item-thumbnail"
          [class.vts-upload-list-item-file]="!file.isUploading"
        >
          <ng-template
            [ngTemplateOutlet]="iconNode"
            [ngTemplateOutletContext]="{ $implicit: file }"
          ></ng-template>
        </div>
        <a
          *ngSwitchCase="'thumbnail'"
          class="vts-upload-list-item-thumbnail"
          [class.vts-upload-list-item-file]="!file.isImageUrl"
          target="_blank"
          rel="noopener noreferrer"
          [href]="file.url || file.thumbUrl"
          (click)="handlePreview(file, $event)"
        >
          <img
            *ngIf="file.isImageUrl; else noImageThumbTpl"
            class="vts-upload-list-item-image"
            [src]="file.thumbUrl || file.url"
            [attr.alt]="file.name"
          />
        </a>
        <div *ngSwitchDefault class="vts-upload-text-icon">
          <ng-template
            [ngTemplateOutlet]="iconNode"
            [ngTemplateOutletContext]="{ $implicit: file }"
          ></ng-template>
        </div>
      </ng-container>
      <ng-template #noImageThumbTpl>
        <ng-template
          [ngTemplateOutlet]="iconNode"
          [ngTemplateOutletContext]="{ $implicit: file }"
        ></ng-template>
      </ng-template>
    </ng-template>
    <ng-template #iconNode let-file>
      <ng-container *ngIf="!iconRender; else customIconRender">
        <ng-container [ngSwitch]="listType">
          <ng-container *ngSwitchCase="'picture'">
            <ng-container *ngIf="file.isUploading; else iconNodeFileIcon">
              <i vts-icon vtsType="Sync"></i>
            </ng-container>
          </ng-container>
          <ng-container *ngSwitchCase="'picture-card'">
            <ng-container *ngIf="file.isUploading; else iconNodeFileIcon">
              {{ locale.uploading }}
            </ng-container>
          </ng-container>
          <i *ngSwitchDefault vts-icon [vtsType]="file.isUploading ? 'Sync' : 'AttachFile'"></i>
        </ng-container>
      </ng-container>
      <ng-template
        #customIconRender
        [ngTemplateOutlet]="iconRender"
        [ngTemplateOutletContext]="{ $implicit: file }"
      ></ng-template>
      <ng-template #iconNodeFileIcon>
        <i vts-icon [vtsType]="file.isImageUrl ? 'picture' : 'file'"></i>
      </ng-template>
    </ng-template>
    <ng-template #removeIcon>
      <button
        *ngIf="icons.showRemoveIcon"
        type="button"
        vts-button
        vtsType="text"
        vtsSize="sm"
        (click)="handleRemove(file, $event)"
        [attr.title]="locale.removeFile"
        class="vts-upload-list-item-card-actions-btn"
      >
        <i vts-icon vtsType="Delete"></i>
      </button>
    </ng-template>
    <ng-template #downloadIcon>
      <button
        *ngIf="file.showDownload"
        type="button"
        vts-button
        vtsType="text"
        vtsSize="sm"
        (click)="handleDownload(file)"
        [attr.title]="locale.downloadFile"
        class="vts-upload-list-item-card-actions-btn"
      >
        <i vts-icon vtsType="Download"></i>
      </button>
    </ng-template>
    <ng-template #downloadOrDelete>
      <span
        *ngIf="listType !== 'picture-card'"
        class="vts-upload-list-item-card-actions {{ listType === 'picture' ? 'picture' : '' }}"
      >
        <ng-template [ngTemplateOutlet]="downloadIcon"></ng-template>
        <ng-template [ngTemplateOutlet]="removeIcon"></ng-template>
      </span>
    </ng-template>
    <ng-template #preview>
      <a
        *ngIf="file.url"
        target="_blank"
        rel="noopener noreferrer"
        class="vts-upload-list-item-name"
        [attr.title]="file.name"
        [href]="file.url"
        [attr.download]="file.linkProps && file.linkProps.download"
        (click)="handlePreview(file, $event)"
      >
        {{ file.name }}
      </a>
      <span
        *ngIf="!file.url"
        class="vts-upload-list-item-name"
        [attr.title]="file.name"
        (click)="handlePreview(file, $event)"
      >
        {{ file.name }}
      </span>
      <ng-template [ngTemplateOutlet]="downloadOrDelete"></ng-template>
    </ng-template>
    <div class="vts-upload-list-item-info">
      <span class="vts-upload-span">
        <ng-template [ngTemplateOutlet]="icon"></ng-template>
        <ng-template [ngTemplateOutlet]="preview"></ng-template>
      </span>
    </div>
    <span
      *ngIf="listType === 'picture-card' && !file.isUploading"
      class="vts-upload-list-item-actions"
    >
      <a
        *ngIf="icons.showPreviewIcon"
        [href]="file.url || file.thumbUrl"
        target="_blank"
        rel="noopener noreferrer"
        [attr.title]="locale.previewFile"
        [ngStyle]="!(file.url || file.thumbUrl) ? { opacity: 0.5, 'pointer-events': 'none' } : null"
        (click)="handlePreview(file, $event)"
      >
        <i vts-icon vtsType="eye"></i>
      </a>
      <ng-container *ngIf="file.status === 'done'">
        <ng-template [ngTemplateOutlet]="downloadIcon"></ng-template>
      </ng-container>
      <ng-template [ngTemplateOutlet]="removeIcon"></ng-template>
    </span>
    <div *ngIf="file.isUploading" class="vts-upload-list-item-progress">
      <vts-progress
        [vtsPercent]="file.percent!"
        vtsType="line"
        [vtsShowInfo]="false"
        [vtsStrokeWidth]="2"
      ></vts-progress>
    </div>
  </div>
</div>
